version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [kafka-net]

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # internal listener (for containers on kafka-net)
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks: [kafka-net]

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint:
      - /bin/bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        cub kafka-ready -b kafka:9092 1 20
        echo "Creating topic api-data-topic..."
        kafka-topics --bootstrap-server kafka:9092 --topic api-data-topic --create --partitions 5 --replication-factor 1 || true
    restart: "no"
    networks: [kafka-net]

  app:
    build: .
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      TOPIC_NAME: "api-data-topic"
      CONSUMER_GROUP: "api-data-consumer-group"
      AUTO_OFFSET_RESET: "earliest"
      BASE_URL: ${BASE_URL}
      API_KEY: ${API_KEY}
      FETCH_INTERVAL: "2"
    command: ["python", "main.py"]
    networks: [kafka-net]

networks:
  kafka-net:
    external: true
